---
title: "Data Frames"
---

## Creating data frames

Data frames are R’s native structure for storing rectangular datasets—that is, datasets arranged in rows and columns, much like a spreadsheet or database table. Conceptually, a data frame can be thought of as a table where each column is a variable and each row is an observation. What makes data frames especially powerful is that each column can be of a different type. One column might contain numeric values, another character strings, or another logical values.

We create data frames using the `data.frame()` function. This function takes vectors as arguments—each vector becomes a column in the resulting data frame. If no column names are explicitly provided, R assigns default names (`V1`, `V2`, etc.):

```{r}
(d1 <- data.frame(1:10, c(-1, 1), seq(0.1, 1, 0.1)))
```

Here, the first column is a sequence from 1 to 10, the second alternates between -1 and 1, and the third consists of decimal values from 0.1 to 1. We can improve readability and clarity by naming the columns directly at the time of creation:

```{r}
(d2 <- data.frame(x = 1:10, y = c(-1, 1), z = seq(0.1, 1, 0.1)))
```

Data frames can also include more complex or realistic data. For example, we might simulate a small dataset with logical, character, and numeric columns, or we can create an empty data frame filled with missing values (`NA`) using matrix construction, and later fill the dataset with our data:

```{r}
(d3 <- data.frame(a = sample(c(TRUE, FALSE), 10, replace = TRUE),
                  b = sample(c("foo", "bar"), 10, replace = TRUE),
                  c = runif(10)))

(d4 <- data.frame(matrix(NA, 10, 3)))

```

::: practice

## Practice

Create a data frame with 3 variables, each of a different types, and 7 observations.

:::: {.panel-tabset}
## {{< var tab_title.question >}}

```{webr-r}

```


## {{< var tab_title.solution >}}

```{r}

(df <- data.frame(text = rep("text", 7),
                  integer = sample(1:10, 7, replace = TRUE),
                  complex = complex(7,1:5))
 )

```
::::

:::








